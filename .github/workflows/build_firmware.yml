name: build firmware

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ansible, teletype, whitewhale, earthsea, meadowphysics]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: build_firmware
      run: |
        pushd $HOME
        git clone https://github.com/monome/avr32-toolchain-linux.git deps/avr32-toolchain-linux
        cd deps/avr32-toolchain-linux
        tar xvfz avr32-gnu-toolchain-3.4.3.820-linux.any.x86_64.tar.gz
        mv avr32-gnu-toolchain-linux_x86_64 $HOME/avr32-tools
        unzip avr32-headers-6.2.0.742.zip -d $HOME/avr32-tools/avr32/include
        popd
        
    - name: build_module
      run: |
        PATH="$HOME/avr32-tools/bin:$PATH"
        cd multipass/monome_euro/${{matrix.module}}
        find ../../.. -name '*.o' -delete
        make

    - name: upload_build
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.module}}
        path: |
          multipass/monome_euro/${{matrix.module}}/*.hex
          multipass/monome_euro/${{matrix.module}}/flash.sh

    - name: zip_build
      if: github.event_name == 'release'
      run: |
        zip ./${{matrix.module}}.zip multipass/monome_euro/${{matrix.module}}/*.hex multipass/monome_euro/${{matrix.module}}/flash.sh

    - name: get latest release
      if: github.event_name == 'release'
      id: get_latest_release
      run: |
        echo ::set-output name={latest_release}::$(git tag | tail -1)

    - name: add builds to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://github.com/${{github.repository}}/releases/tag/{{steps.get_latest_release.outputs.latest_release}}
        asset_name: ${{matrix.module}}
        asset_path: ./${{matrix.module}}.zip
        asset_content_type: application/zip        
