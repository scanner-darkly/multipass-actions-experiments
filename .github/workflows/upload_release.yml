name: upload release

# this workflow builds and uploads firmware for selected modules
# to the latest release (both hex and zip) 

# it gets triggered automatically whenever a new release is created
# you can also trigger it manually

# specify modules to build for in the matrix module property below
# possible values are: ansible, teletype, whitewhale, meadowphysics, earthsea

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ansible, teletype, whitewhale, meadowphysics, earthsea]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: restore toolchain
      run: |
        pushd $HOME
        git clone https://github.com/monome/avr32-toolchain-linux.git deps/avr32-toolchain-linux
        cd deps/avr32-toolchain-linux
        tar xvfz avr32-gnu-toolchain-3.4.3.820-linux.any.x86_64.tar.gz
        mv avr32-gnu-toolchain-linux_x86_64 $HOME/avr32-tools
        unzip avr32-headers-6.2.0.742.zip -d $HOME/avr32-tools/avr32/include
        popd
        
    - name: build firmware
      run: |
        PATH="$HOME/avr32-tools/bin:$PATH"
        cd multipass/monome_euro/${{matrix.module}}
        find ../../.. -name '*.o' -delete
        make

    - name: prepare files
      id: prepare_files
      run: |
        HEX_FILE_PATH=`echo multipass/monome_euro/${{matrix.module}}/*.hex "$1"`
        echo ::set-output name=hex_file_path::$HEX_FILE_PATH
        echo ::set-output name=hex_file::`basename $HEX_FILE_PATH`
        zip -j ./${{matrix.module}}.zip $HEX_FILE_PATH multipass/monome_euro/${{matrix.module}}/flash.sh

    - name: find release
      id: find_release
      uses: scanner-darkly/get-release@f589ce0779c7bef1faf175f7488c972eb47dc046
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: add zip to release
      uses: scanner-darkly/upload-release-asset@e9f0662bdf9868f4aac644f0eedc2b56567fdba8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.find_release.outputs.upload_url }}
        asset_name: ${{matrix.module}}.zip
        asset_path: ./${{matrix.module}}.zip
        asset_content_type: application/zip

    - name: add hex to release
      uses: scanner-darkly/upload-release-asset@e9f0662bdf9868f4aac644f0eedc2b56567fdba8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.find_release.outputs.upload_url }}
        asset_name: ${{ steps.prepare_files.outputs.hex_file }}
        asset_path: ${{ steps.prepare_files.outputs.hex_file_path }}
        asset_content_type: application/octet-stream
